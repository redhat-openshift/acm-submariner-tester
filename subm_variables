#!/bin/bash

### Global variables for Submariner setup and tests ###
#
# To override variable with an existing environment variable from active session:
# Change variable assignment format from VAR="value" to VAR="${VAR:-value}"

### Workspace vars ###

export WORKDIR=~/submariner-install
export GOROOT="/usr/local/go"
export PATH="${GOROOT}/bin:${PATH}"
export GOBIN="${WORKDIR}/GOBIN" # or "${GOROOT}/bin" if using system's default golang
export OC="${GOBIN}/oc"
export OCPUP_DIR="${WORKDIR}/ocpup"

### Env and test vars ###

export CLUSTER_SET_ID="${CLUSTER_SET_ID}" # To identify the cluster-set of all clusters (A, B and C)
export CLUSTER_A_NAME="${CLUSTER_A_NAME}" # Recommended cluster name: {user}-{cloud}-{project}-{index}
export CLUSTER_A_YAML="${CLUSTER_A_YAML:-${WORKDIR}/setup-cluster-a.yaml}"
export NETSHOOT_CLUSTER_A="netshoot-cl-a"

export SUBM_NAMESPACE="submariner-operator"
export BROKER_INFO="broker-info.subm"
export BROKER_NAMESPACE="submariner-k8s-broker"
export BROKER_NAMESPACE="submariner-broker"

export CLUSTER_B_NAME="${CLUSTER_B_NAME}" # Recommended cluster name: {user}-{cloud}-{project}-{index}
export CLUSTER_B_YAML="${CLUSTER_B_YAML:-${WORKDIR}/setup-cluster-b.yaml}"
export NGINX_CLUSTER_BC="nginx-cl-bc"

export CLUSTER_C_NAME="${CLUSTER_C_NAME}" # Recommended cluster name: {user}-{cloud}-{project}-{index}
export CLUSTER_C_YAML="${CLUSTER_C_YAML:-${WORKDIR}/setup-cluster-c.yaml}"

export NETSHOOT_IMAGE="quay.io/submariner/nettest" # "nicolaka/netshoot"
export NGINX_IMAGE="quay.io/openshifttest/nginx-alpine:latest" # "nginxinc/nginx-unprivileged:stable-alpine"
export NGINX_PORT="8080"

# Do not use the same IPSEC port numbers multiple times in one project
export IPSEC_NATT_PORT=${IPSEC_NATT_PORT:-4500}
export IPSEC_IKE_PORT=${IPSEC_IKE_PORT:-500}
export GW_INSTANCE_TYPE=${GW_INSTANCE_TYPE:-m4.xlarge}

export TEST_NS="${TEST_NS:-test-submariner}"
export MULTI_CLUSTER_DOMAIN="clusterset.local"
export REPORT_NAME="${REPORT_NAME:-Submariner Tests}"


### AWS vars ###

# Wrap credentials with single quotes:
export AWS_KEY='user-aws-access-key'
export AWS_SECRET='user-aws-secret-access-key'
export AWS_PROFILE_NAME="aws-profile"
export AWS_PROFILE_ID="012345678910"
export AWS_REGION="aws-region"
export AWS_ZONE_NAME="aws-zone-name"
export AWS_ZONE_ID="aws-zone-id"


### OpenStack vars ###

# Wrap credentials with single quotes:
export OS_AUTH_URL="https://openstack-auth-url:13000/v3"
export OS_USERNAME='openstack-user'
export OS_PASSWORD='openstack-pass'
export OS_USER_DOMAIN_NAME="openstack.domain"
export OS_PROJECT_NAME="openstack-project"
export OS_PROJECT_DOMAIN_ID="openstack-project-id"
export OS_REGION_NAME="openstack-region"


### Google vars ###

GCP_CRED_JSON="${GCP_CRED_JSON:-gcp-cred.json}"


### OpenShift registry vars ###

export OCP_USR='ocp_user' # Local registry user

# The official and staging Redhat products registry, that is accessible on the internet (external)
export OFFICIAL_REGISTRY="registry.redhat.io"
export STAGING_REGISTRY="registry.stage.redhat.io"

# Another official Redhat registry catalog (external)
export CATALOG_REGISTRY="registry.access.redhat.com"
export CATALOG_IMAGE_PREFIX="openshift4"
export CATALOG_IMAGE_IMPORT_PATH="ose-oauth-proxy"

# PROXY Snapshot registry for Redhat product container images that can be accessed within Redhat's network (interanl with VPN)
export VPN_REGISTRY="registry-proxy.engineering.redhat.com"

# BREW Snapshot registry for redhat product container images that is accessible on the internet with credentials (external)
export BREW_REGISTRY="brew.registry.redhat.io"
export REGISTRY_IMAGE_PREFIX="rhacm2"
export REGISTRY_IMAGE_PREFIX_TECH_PREVIEW="rhacm2-tech-preview" # Supports digests only (ICSP)
export REGISTRY_IMAGE_IMPORT_PATH="rh-osbs" # supports digests (hash) and floating tags
# Wrap credentials with single quotes:
export REGISTRY_USR='brew-user'
export REGISTRY_PWD='brew-pass'

# QUAY.IO registry - also accessible on the internet with credentials
export QUAY_REGISTRY="quay.io:443"
export QUAY_IMAGE_IMPORT_PATH="acm-d" # supports digests (hash) and floating tags
export QUAY_IMAGE_MCE_PREFIX="multicluster-engine"
export QUAY_USR='quay-user'
export QUAY_PWD='quay-pass'


### Submariner resources vars ###

export SUBM_OPERATOR="submariner"
export SUBM_BUNDLE="submariner-operator-bundle"
export SUBM_AGENT="submariner-agent"
export SUBM_GATEWAY="submariner-gateway"
export SUBM_ROUTE_AGENT="submariner-routeagent"
export SUBM_GLOBALNET="submariner-globalnet"
export SUBM_LH_COREDNS="submariner-lighthouse-coredns"

export SUBM_IMG_SUBCTL="${SUBM_IMG_SUBCTL:-subctl-rhel8}"
export SUBM_IMG_GATEWAY="${SUBM_IMG_GATEWAY:-submariner-gateway-rhel8}"
export SUBM_IMG_ROUTE="${SUBM_IMG_ROUTE:-submariner-route-agent-rhel8}"
export SUBM_IMG_NETWORK="${SUBM_IMG_NETWORK:-submariner-networkplugin-syncer-rhel8}"
export SUBM_IMG_LIGHTHOUSE="${SUBM_IMG_LIGHTHOUSE:-lighthouse-agent-rhel8}"
export SUBM_IMG_COREDNS="${SUBM_IMG_COREDNS:-lighthouse-coredns-rhel8}"
export SUBM_IMG_GLOBALNET="${SUBM_IMG_GLOBALNET:-submariner-globalnet-rhel8}"
export SUBM_IMG_OPERATOR="${SUBM_IMG_OPERATOR:-submariner-rhel8-operator}"
export SUBM_IMG_BUNDLE="${SUBM_IMG_BUNDLE:-submariner-operator-bundle}"

export SUBM_VER_TAG=${SUBM_VER_TAG}
export SUBM_CHANNEL_PREFIX_TECH_PREVIEW="alpha-"
export SUBM_CHANNEL_PREFIX="stable-"


### ACM resources vars ###

export OPERATORS_NAMESPACE="openshift-operators"
export MARKETPLACE_NAMESPACE="openshift-marketplace"

export ACM_NAMESPACE="ocm" # instead of "open-cluster-management"
export ACM_OPERATOR="advanced-cluster-management"
export ACM_BUNDLE="acm-operator-bundle"
export ACM_INSTANCE="multiclusterhub"

export ACM_VER_TAG=${ACM_VER_TAG}
export ACM_CHANNEL_PREFIX="release-"


### MCE resources vars ###

export MCE_NAMESPACE="mce" # instead of "multicluster-engine"
export MCE_OPERATOR="multicluster-engine"
export MCE_BUNDLE="multicluster-engine-operator-bundle"
export MCE_INSTANCE="multiclusterengine"

export MCE_VER_TAG=${MCE_VER_TAG:-2.0.0}
export MCE_CHANNEL_PREFIX="stable-"


### Polarion vars ###

export POLARION_SERVER="polarion.server.name" # without " https:// "
# Wrap credentials with single quotes:
export POLARION_USR='polarion-user'
export POLARION_PWD='polarion-pass'
export POLARION_PROJECT_ID="${POLARION_PROJECT_ID:-}"
export POLARION_TEAM_NAME="${POLARION_TEAM_NAME:-}"
export POLARION_TESTRUN_TEMPLATE="${POLARION_TESTRUN_TEMPLATE:-}"
export POLARION_COMPONENT_ID="${POLARION_COMPONENT_ID:-}"
export POLARION_TESTPLAN_ID="${POLARION_TESTPLAN_ID:-}"
export POLARION_TESTCASES_DOC="${POLARION_TESTCASES_DOC:-${POLARION_TESTPLAN_ID}_Testscases}"
